
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  role: 'role'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  photo: 'photo',
  role_id: 'role_id'
};

exports.Prisma.GroupScalarFieldEnum = {
  id: 'id',
  name: 'name',
  photo: 'photo',
  about: 'about',
  benefit: 'benefit',
  room_id: 'room_id',
  created_at: 'created_at'
};

exports.Prisma.RoomScalarFieldEnum = {
  id: 'id',
  name: 'name',
  is_group: 'is_group',
  created_by: 'created_by',
  created_at: 'created_at'
};

exports.Prisma.RoomMemberScalarFieldEnum = {
  id: 'id',
  room_id: 'room_id',
  user_id: 'user_id',
  role_id: 'role_id',
  joined_at: 'joined_at'
};

exports.Prisma.RoomMessageScalarFieldEnum = {
  id: 'id',
  room_id: 'room_id',
  sender_id: 'sender_id',
  content: 'content',
  type: 'type',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.RoleType = exports.$Enums.RoleType = {
  USER: 'USER',
  MEMBER: 'MEMBER',
  OWNER: 'OWNER'
};

exports.MessageType = exports.$Enums.MessageType = {
  TEXT: 'TEXT',
  IMAGE: 'IMAGE'
};

exports.Prisma.ModelName = {
  Role: 'Role',
  User: 'User',
  Group: 'Group',
  Room: 'Room',
  RoomMember: 'RoomMember',
  RoomMessage: 'RoomMessage'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/apple/Documents/hichat/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/apple/Documents/hichat/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum RoleType {\n  USER\n  MEMBER\n  OWNER\n}\n\nmodel Role {\n  id String @id @default(uuid()) @db.Char(36)\n\n  role RoleType\n\n  users             User[]\n  room_member_roles RoomMember[]\n\n  @@map(\"roles\")\n}\n\nmodel User {\n  id String @id @default(uuid()) @db.Char(36)\n\n  name     String\n  email    String\n  password String\n  photo    String\n\n  role_id String\n  role    Role   @relation(fields: [role_id], references: [id])\n\n  rooms         Room[]        @relation(\"UserCreateRelation\")\n  room_members  RoomMember[]\n  room_messages RoomMessage[]\n\n  @@map(\"users\")\n}\n\nmodel Group {\n  id String @id @default(uuid()) @db.Char(36)\n\n  name    String\n  photo   String\n  about   String   @db.Text\n  benefit String[]\n\n  room_id String @unique\n  room    Room   @relation(fields: [room_id], references: [id])\n\n  created_at DateTime @default(now())\n\n  @@map(\"groups\")\n}\n\nmodel Room {\n  id String @id @default(uuid()) @db.Char(36)\n\n  name     String?\n  is_group Boolean @default(false)\n\n  created_by      String\n  created_by_user User   @relation(\"UserCreateRelation\", fields: [created_by], references: [id])\n\n  created_at DateTime @default(now())\n\n  members RoomMember[]\n  message RoomMessage[]\n\n  group Group?\n\n  @@map(\"rooms\")\n}\n\nmodel RoomMember {\n  id String @id @default(uuid()) @db.Char(36)\n\n  room_id String\n  room    Room   @relation(fields: [room_id], references: [id])\n\n  user_id String\n  user    User   @relation(fields: [user_id], references: [id])\n\n  role_id String\n  role    Role   @relation(fields: [role_id], references: [id])\n\n  joined_at DateTime @default(now())\n\n  @@map(\"room_members\")\n}\n\nenum MessageType {\n  TEXT\n  IMAGE\n}\n\nmodel RoomMessage {\n  id String @id @default(uuid()) @db.Char(36)\n\n  room_id String\n  room    Room   @relation(fields: [room_id], references: [id])\n\n  sender_id String\n  user      User   @relation(fields: [sender_id], references: [id])\n\n  content String @db.Text\n\n  type MessageType? @default(TEXT)\n\n  created_at DateTime @default(now())\n\n  @@map(\"room_messages\")\n}\n",
  "inlineSchemaHash": "bf10cc8b5d26caa4c55d5e49be85d5c1d8baca3017f5097eb39d617178df131d",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Role\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"RoleType\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RoleToUser\"},{\"name\":\"room_member_roles\",\"kind\":\"object\",\"type\":\"RoomMember\",\"relationName\":\"RoleToRoomMember\"}],\"dbName\":\"roles\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"photo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToUser\"},{\"name\":\"rooms\",\"kind\":\"object\",\"type\":\"Room\",\"relationName\":\"UserCreateRelation\"},{\"name\":\"room_members\",\"kind\":\"object\",\"type\":\"RoomMember\",\"relationName\":\"RoomMemberToUser\"},{\"name\":\"room_messages\",\"kind\":\"object\",\"type\":\"RoomMessage\",\"relationName\":\"RoomMessageToUser\"}],\"dbName\":\"users\"},\"Group\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"photo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"about\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"benefit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"room_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"room\",\"kind\":\"object\",\"type\":\"Room\",\"relationName\":\"GroupToRoom\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"groups\"},\"Room\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_group\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_by\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_by_user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserCreateRelation\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"RoomMember\",\"relationName\":\"RoomToRoomMember\"},{\"name\":\"message\",\"kind\":\"object\",\"type\":\"RoomMessage\",\"relationName\":\"RoomToRoomMessage\"},{\"name\":\"group\",\"kind\":\"object\",\"type\":\"Group\",\"relationName\":\"GroupToRoom\"}],\"dbName\":\"rooms\"},\"RoomMember\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"room_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"room\",\"kind\":\"object\",\"type\":\"Room\",\"relationName\":\"RoomToRoomMember\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RoomMemberToUser\"},{\"name\":\"role_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToRoomMember\"},{\"name\":\"joined_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"room_members\"},\"RoomMessage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"room_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"room\",\"kind\":\"object\",\"type\":\"Room\",\"relationName\":\"RoomToRoomMessage\"},{\"name\":\"sender_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RoomMessageToUser\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"MessageType\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"room_messages\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

